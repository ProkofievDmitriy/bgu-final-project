Meters = [node_2,node_3,node_4,node_5,node_6,node_7,node_8,node_9,node_10].

c(dc).
node_

spawn(dc,start_link,[dc_node,self(),Meters]). 

dc_node_app ! ok.


1:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m1,1}],0}).

2:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m1,1},{m2,2}],0}).

3:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m3,3}],0}).

4:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m3,3},{m4,4}],0}).

5:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m5,5}],0}).


gen_fsm:send_event(node_1_app,{received_message, <<0:1,1:6,0:8,5:6,5:16>>})


6:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m5,5},{m6,6}],0}).

7:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m3,3},{m7,7}],0}).
 
 gen_fsm:send_event(node_1_app,{received_message, <<1:1,1:6,0:8,7:6,7:16,3:6,3:16>>}).

8:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m3,3},{m7,7},{m8,8}],0}).

9:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m5,5},{m9,9}],0}).

10:
 gen_fsm:send_event(dc_node_app,{drep,m11,[{m5,5},{m9,9},{m10,10}],0}).

 
 
 gen_fsm:stop(dc_node_app).
 
 ==============================================================
 

 
 
 







 
 
 
 accidental bugs:
 - arrival of unexpected sequence number crashee phase2

 
 
 unhandeled stuff:
 - OTP behavior
 - timestamps
 - average number of rounds of phase 1
 - handleinfo
 - unresponsive station
 - supervision
 - change drep format in sem module
 
 tested and working:
 - dc
